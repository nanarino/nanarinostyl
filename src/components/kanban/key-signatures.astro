---
import { KeySignature, offsetRange } from "./key-signatures";
import T from "../T.astro";

const MODES = {
    "": new KeySignature("C"),
    m: new KeySignature("A"),
    Mix: new KeySignature("G"),
    Dor: new KeySignature("D"),
    Phr: new KeySignature("E"),
    Lyd: new KeySignature("F"),
    Loc: new KeySignature("B"),
} as const;
---

<T class="☘-table-wrapper">
    <T class="☘-table" id="key-signatures-kanban">
        <T class="☘-table-header-group">
            <T class="☘-table-row">
                <T class="☘-table-cell fixed">𝗠𝗼𝗱𝗲</T>
                <T class="☘-table-cell">𝓘𝓸𝓷𝓲𝓪𝓷</T>
                <T class="☘-table-cell">𝓐𝓮𝓸𝓵𝓲𝓪𝓷</T>
                <T class="☘-table-cell">𝓜𝓲𝔁𝓸𝓵𝔂𝓭𝓲𝓪𝓷</T>
                <T class="☘-table-cell">𝓓𝓸𝓻𝓲𝓪𝓷</T>
                <T class="☘-table-cell">𝓟𝓱𝓻𝔂𝓰𝓲𝓪𝓷</T>
                <T class="☘-table-cell">𝓛𝔂𝓭𝓲𝓪𝓷</T>
                <T class="☘-table-cell">𝓛𝓸𝓬𝓻𝓲𝓪𝓷</T>
            </T>
            <T class="☘-table-row">
                <T class="☘-table-cell fixed">𝗞𝗲𝘆 𝗦𝗶𝗴𝗻𝗮𝘁𝘂𝗿𝗲</T>
                <T class="☘-table-cell">𝙈𝙖𝙟𝙤𝙧</T>
                <T class="☘-table-cell">𝙈𝙞𝙣𝙤𝙧</T>
                <T class="☘-table-cell" />
                <T class="☘-table-cell" />
                <T class="☘-table-cell" />
                <T class="☘-table-cell" />
                <T class="☘-table-cell" />
            </T>
        </T>
        {
            offsetRange.map((offset) => (
                <T
                    class="☘-table-row"
                    dataset={{
                        primary: offset == 0 ? "danger" : "warning",
                    }}
                >
                    <T class="☘-table-cell fixed offset">
                        {Math.abs(offset)}&nbsp;
                        {offset > 1 ? "sharps" : ""}
                        {offset == 1 ? "sharp" : ""}
                        {offset == 0 ? "sharps/flats" : ""}
                        {offset == -1 ? "sharp" : ""}
                        {offset < -1 ? "flats" : ""}
                    </T>
                    {Reflect.ownKeys(MODES).map((mode) => (
                        <T class="☘-table-cell">
                            <T tag="code" class="☘-code ☘-font-mono">
                                {MODES[mode].offset(offset)}
                                {mode}
                            </T>
                        </T>
                    ))}
                </T>
            ))
        }
    </T>
</T>

<style lang="stylus" is:global>
@import './../../lib/variable/functions.styl'

#key-signatures-kanban
    code
        --color-code var(--primary-6)
    .fixed
        position sticky
        left 0
        box-shadow var(--box-shadow-divider-right), var(--box-shadow-divider-bottom)
    .offset   
        background-color rgb(var(--white))
</style>
